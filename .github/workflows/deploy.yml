name: CI/CD Pipeline Backend + Frontend

on:
  push:
    tags:
      - '*.*.*'

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup environment
        run: cp .env.dist .env

      - name: Run backend tests
        run: pytest --cov=app tests/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  frontend-test:
    runs-on: ubuntu-latest
    needs: backend-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup environment
        run: cp .env.dist .env

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend unit tests with coverage
        run: npm run test -- --coverage --watchAll=false

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build and start stack
        run: |
          docker compose up -d
          sleep 15

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6

      - name: Stop stack
        run: docker compose down

  frontend-build:
    runs-on: ubuntu-latest
    needs: frontend-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup environment
        run: cp .env.prod .env

      - name: Install and build frontend
        run: |
          npm ci
          npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./frontend/build

  deploy:
    runs-on: ubuntu-latest
    needs: frontend-build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: ./build

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_path: ./build
